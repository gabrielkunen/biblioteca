name: API-BIBLIOTECA

on:
  push:
    branches: [main]

jobs:
  tests:
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4.2.2

      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0'

      - name: Restore Dependencies Biblioteca.Domain.UnitTests
        run: dotnet restore ./tests/Biblioteca.Domain.UnitTests/Biblioteca.Domain.UnitTests.csproj

      - name: Run Tests Biblioteca.Domain.UnitTests
        run: dotnet test ./tests/Biblioteca.Domain.UnitTests/Biblioteca.Domain.UnitTests.csproj --verbosity minimal

      - name: Restore Dependencies Biblioteca.Application.UnitTests
        run: dotnet restore ./tests/Biblioteca.Application.UnitTests/Biblioteca.Application.UnitTests.csproj

      - name: Run Tests Biblioteca.Application.UnitTests
        run: dotnet test ./tests/Biblioteca.Application.UnitTests/Biblioteca.Application.UnitTests.csproj --verbosity minimal

      - name: Restore Dependencies Biblioteca.Api.FunctionalTests
        run: dotnet restore ./tests/Biblioteca.Api.FunctionalTests/Biblioteca.Api.FunctionalTests.csproj

      - name: Run Tests Biblioteca.Api.FunctionalTests
        run: dotnet test ./tests/Biblioteca.Api.FunctionalTests/Biblioteca.Api.FunctionalTests.csproj --verbosity minimal

  docker_registry:
    runs-on: ubuntu-24.04
    needs: [tests]
    steps:
      - name: Checkout
        uses: actions/checkout@v4.2.2
      
      - name: Docker Login
        uses: docker/login-action@v3.4.0
        with: 
          registry: ${{ secrets.DOCKER_REGISTRY_URL }}
          username: ${{ secrets.CI_USER }}
          password: ${{ secrets.CI_PASSWORD }}

      - name: Docker Registry
        uses: docker/build-push-action@v6.15.0
        with:
          context: .
          push: true
          tags: |
            ${{ secrets.DOCKER_REGISTRY_URL }}/biblioteca-api:${{ github.sha }}
            ${{ secrets.DOCKER_REGISTRY_URL }}/biblioteca-api:latest

  deploy:
    runs-on: ubuntu-24.04
    needs: [docker_registry]
    steps:
      - name: Deploy com SSH
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.CI_SSH_HOST }}
          username: ${{ secrets.CI_SSH_USER }}
          key: ${{ secrets.CI_SSH_KEY }}
          passphrase: ${{ secrets.CI_SSH_PASSWORD }}
          port: ${{ secrets.CI_SSH_PORT }}
          script: |
            cd /root/biblioteca
            docker compose pull ${{ secrets.DOCKER_REGISTRY_URL }}/biblioteca-api
            docker compose up -d api
